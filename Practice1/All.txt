1.3. –ó–∞–¥–∞–Ω–∏–µ
–í—ã–≤–µ–¥–∏—Ç–µ –Ω–∞ –ø–µ—á–∞—Ç—å –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

x = 5
A = {1, 3, 7, 8}
B = {2, 4, 5, 10, 'apple'}
C = A & B
df = '–ê–Ω—Ç–æ–Ω–æ–≤–∞ –ê–Ω—Ç–æ–Ω–∏–Ω–∞', 34, '–ñ'
z = 'type'
D = [1, 'title', 2, 'content']

print(x, '|', type(x), '\n', A, '|', type(A), '\n', B, '|', type (B), '\n', C, '|', type(C), '\n', df, '|', type(df), '\n', z, '|', type(z), '\n', D, '|', type(D)) 


2.3. –ó–∞–¥–∞–Ω–∏–µ
–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥. –ó–∞–¥–∞–µ—Ç—Å—è —Ö, –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å –∫–∞–∫–æ–º—É –∏–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç: (-infinity, -5), [-5, 5] –∏–ª–∏ –æ—Ç (5, +infinity)

x = 5
if x <= -5:
    print("(-infinity, -5)")
elif x >= -5 and x <= 5:
    print("[-5, 5]")
else:
    print("(5, +infinity)")
    

3.3.1 –ó–∞–¥–∞–Ω–∏–µ
–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –Ω–∞ while (3.2.1) –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

x = 10
while x >= 0:
    print(x)
    x -= 3


3.3.2 –ó–∞–¥–∞–Ω–∏–µ
–ü—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —á–∞—Å—Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫. –°–æ–∑–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–∏–º—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ (–ø—Ä–∏–∑–Ω–∞–∫–æ–≤), –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∏—Ö —á–µ–ª–æ–≤–µ–∫–∞. –í—ã–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω.

person = ['age', 'name', 'surname', 'nationality']
for identif in person:
    print(identif)


3.3.3 –ó–∞–¥–∞–Ω–∏–µ
–°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –æ—Ç 2 –¥–æ 15 —Å —à–∞–≥–æ–º 1.

n = range(2, 16, 1)
print(list(n))


3.3.4 –ó–∞–¥–∞–Ω–∏–µ
–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –Ω–∞ for c —Ñ—É–Ω–∫—Ü–∏–µ–π range() (3.2.4) –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

for i in range(106, 5, -25):
    print(i)


3.3.5 –ó–∞–¥–∞–Ω–∏–µ
–°—Ä–µ–∑. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ x —Å —á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏ –ø–µ—Ä–µ—Å—Ç–∞–≤–∏—Ç –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –¢.–µ. –µ—Å–ª–∏ x = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], —Ç–æ –∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å [8, 1, 6, 3, 4, 5, 2, 7, 0, 9].

x = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
c = []
for i in range(0, len(x)):
    if i % 2 == 0:
        c.append(len(x) - 2 - i)
    else:
        c.append(i)
print(c)


4.3.1 –ó–∞–¥–∞–Ω–∏–µ
–ó–∞–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞(0; 1). –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ä–µ–¥–Ω–∏–µ –∏ –º–µ–¥–∏–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –º–∞—Å—Å–∏–≤–∞, —Å—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –∫–∞–∫–∏–µ –≤—ã–≤–æ–¥—ã –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ –∑–Ω–∞—á–µ–Ω–∏—è—Ö? –ü–æ—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ—á–µ—á–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Ä–∞—Å—Å–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞.


import matplotlib.pyplot as plt
import numpy as np
import math as m
from scipy.integrate import simps
from numpy import trapz as tr


def fun(x: float) -> float:
    return abs(m.cos(x * m.pow(m.e, m.cos(x) + m.log(x + 1, m.e))))

xs = list(range(0, 11, 1))
ys = []
for i in xs:
    ys.append(fun(i))
    
plt.plot(xs, ys)
plt.fill_between(xs, ys) #–≤—Å—Ç–∞–≤–∏—Ç—å –º–µ–∂–¥—É
print(tr(ys))
plt.title("Graphic")
plt.xlabel("X")
plt.ylabel("Y")
plt.grid()
plt.show()


4.3.2 –ó–∞–¥–∞–Ω–∏–µ
–î–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ 10 –∑–Ω–∞—á–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–∏ (ùë•, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –æ—Ç 1 –¥–æ 10). –í—ã–¥–µ–ª–∏—Ç—å —Å—Ä–µ–∑ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞ –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ ‚Äì –ª–∏–Ω–µ–π–Ω—ã–π –∏ –¥–ª—è —Å—Ä–µ–∑–∞ ‚Äì —Ç–æ—á–µ—á–Ω—ã–π

import numpy as np 
import matplotlib.pyplot as plt 
from scipy.integrate import simps
from numpy import trapz 
x = np.arange(0.0, 10, 0.1) 
y = np.abs(np.sin(x*np.exp(np.cos(x)))) 
plt.grid() 
plt.plot(x, y, c = "r") 
plt.fill_between(x, y)


4.3.3 –ó–∞–¥–∞–Ω–∏–µ
–î–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è |cos(ùë•ùëí(cos(ùë•)+ln(ùë•+1)))| –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ (0,10) —Å —à–∞–≥–æ–º 1 —Å –∑–∞–ª–∏–≤–∫–æ–π –ø–ª–æ—â–∞–¥–∏ –∏ –Ω–∞–π—Ç–∏ —ç—Ç—É –ø–ª–æ—â–∞–¥—å –ø–æ–¥ –Ω–∏–º. –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ trapz(), –≤—ã—á–∏—Å–ª—è—é—â–µ–π –∏–Ω—Ç–µ–≥—Ä–∞–ª –ø–æ –ø—Ä–∞–≤–∏–ª—É —Ç—Ä–∞–ø–µ—Ü–∏–∏. –î–ª—è –µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: from scipy.integrate import simps from numpy import trapz

from matplotlib import pyplot as plt 
import numpy as np

marks = ['–ù–µ—É–¥', '–£–¥–æ–≤–ª', '–•–æ—Ä', '–û—Ç–ª']

data = [3, 7, 8, 4] 
fig = plt.figure(figsize = (10,7)) 
plt.pie(data, labels = marks) 
plt.show() 
plt.grid() 
plt.scatter(marks,data)


import math
import matplotlib.pyplot as plt
apple = [131.96, 121.26, 122.15, 131.46, 124.61, 136.96, 145.86, 151.83, 141.50, 149.80, 165.30, 177.57]
microsoft = [231.96, 232.38, 235.77, 252.18, 249.68, 270.90, 284.91, 301.88, 281.92, 331.62, 330.59, 336.32]
google = [1824.50, 2021.30, 2072.70, 2355.0, 2365.60, 2441.20, 2703.00, 2901.40, 2678.50, 2962.50, 2860.20, 2900.30]

print("Apple")
plt.plot(apple)
plt.show(apple)
print("Microsoft")
plt.plot(microsoft)
plt.show(microsoft)
print("Google")
plt.plot(google)
plt.show(google)


4.3.5 –ó–∞–¥–∞–Ω–∏–µ
–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–µ–π—à–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –≤–∫–ª—é—á–∞—é—â–∏–π –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –¥–≤—É—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ‚Ä≤+‚Ä≤,‚Ä≤‚àí‚Ä≤,‚Ä≤‚àô‚Ä≤,‚Ä≤√∑‚Ä≤, –∞ —Ç–∞–∫–∂–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π: ùëíùë•+ùë¶,sin(ùë•+ùë¶),cos(ùë•+ùë¶),ùë•ùë¶.

import math as mh

x = float(input('–í–≤–µ–¥–∏—Ç–µ x: '))
y = float(input('–í–≤–µ–¥–∏—Ç–µ y: '))
print("+ - –í—ã–±–µ—Ä–∏—Ç–µ 1")
print("- - –í—ã–±–µ—Ä–∏—Ç–µ 2")
print("* - –í—ã–±–µ—Ä–∏—Ç–µ 3")
print("/ - –í—ã–±–µ—Ä–∏—Ç–µ 4")
print('sin - –í—ã–±–µ—Ä–∏—Ç–µ 5')
print('cos - –í—ã–±–µ—Ä–∏—Ç–µ 6')
print('x^y - –í—ã–±–µ—Ä–∏—Ç–µ 7')
print('e^(x + y) - –í—ã–±–µ—Ä–∏—Ç–µ 8')
operation = str(input('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é: '))

if operation == "1":
    print(x + y)
elif operation == "2":
    print(x - y)
elif operation == "3":
    print(x * y)
elif operation == "4":
    if y > 0:
        print(x / y)
    else:
        print("–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ")
elif operation == '5':
    print(mh.sin(x + y))
elif operation == '6':
    print(mh.cos(x + y))
elif operation == '7':
    print(mh.pow(x, y))
elif operation == '8':
    print(mh.pow(mh.e, x + y))
else:
    print('–¢–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
